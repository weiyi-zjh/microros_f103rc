ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"custom_memory_manager.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvHeapInit,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	prvHeapInit:
  24              	.LFB12:
  25              		.file 1 "micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c"
   1:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*
   2:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * A custom implementation of pvPortMallocMicroROS() and vPortFreeMicroROS() with realloc and
   3:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * calloc features based on FreeRTOS heap4.c.
   4:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  */
   5:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  
   6:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #include <stdlib.h>
   7:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #include <string.h>
   8:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
   9:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  10:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** all the API functions to use the MPU wrappers.  That should only be done when
  11:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** task.h is included from an application file. */
  12:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  13:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  14:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #include "FreeRTOS.h"
  15:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #include "task.h"
  16:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  17:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  18:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  19:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 0 )
  20:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	#error This file must not be used if configSUPPORT_DYNAMIC_ALLOCATION is 0
  21:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #endif
  22:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  23:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Block sizes must not get too small. */
  24:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #define heapMINIMUM_BLOCK_SIZE	( ( size_t ) ( xHeapStructSize << 1 ) )
  25:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  26:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Assumes 8bit bytes! */
  27:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #define heapBITS_PER_BYTE		( ( size_t ) 8 )
  28:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  29:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Allocate the memory for the heap. */
  30:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
  31:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  32:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Define the linked list structure.  This is used to link free blocks in order
  33:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** of their memory address. */
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 2


  34:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** typedef struct A_BLOCK_LINK
  35:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
  36:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	struct A_BLOCK_LINK *pxNextFreeBlock;	/*<< The next free block in the list. */
  37:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	size_t xBlockSize;						/*<< The size of the free block. */
  38:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** } BlockLink_t;
  39:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  40:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
  41:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  42:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*
  43:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * Inserts a block of memory that is being freed into the correct position in
  44:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * the list of free memory blocks.  The block being freed will be merged with
  45:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * the block in front it and/or the block behind it if the memory blocks are
  46:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * adjacent to each other.
  47:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  */
  48:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert );
  49:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  50:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*
  51:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * Called automatically to setup the required heap structures the first time
  52:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * pvPortMallocMicroROS() is called.
  53:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  */
  54:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static void prvHeapInit( void );
  55:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  56:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
  57:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  58:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* The size of the structure placed at the beginning of each allocated memory
  59:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** block must by correctly byte aligned. */
  60:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static const size_t xHeapStructSize	= ( sizeof( BlockLink_t ) + ( ( size_t ) ( portBYTE_ALIGNMENT -
  61:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  62:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Create a couple of list links to mark the start and end of the list. */
  63:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static BlockLink_t xStart, *pxEnd = NULL;
  64:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  65:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Keeps track of the number of free bytes remaining, but says nothing about
  66:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** fragmentation. */
  67:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static size_t xFreeBytesRemaining = 0U;
  68:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static size_t xMinimumEverFreeBytesRemaining = 0U;
  69:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  70:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Gets set to the top bit of an size_t type.  When this bit in the xBlockSize
  71:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** member of an BlockLink_t structure is set then the block belongs to the
  72:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** application.  When the bit is free the block is still part of the free heap
  73:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** space. */
  74:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static size_t xBlockAllocatedBit = 0;
  75:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  76:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
  77:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  78:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void *pvPortMallocMicroROS( size_t xWantedSize )
  79:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
  80:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
  81:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void *pvReturn = NULL;
  82:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  83:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
  84:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
  85:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* If this is the first call to malloc then the heap will require
  86:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		initialisation to setup the list of free blocks. */
  87:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if( pxEnd == NULL )
  88:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
  89:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			prvHeapInit();
  90:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 3


  91:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		else
  92:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
  93:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			mtCOVERAGE_TEST_MARKER();
  94:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
  95:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  96:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* Check the requested block size is not so large that the top bit is
  97:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		set.  The top bit of the block size member of the BlockLink_t structure
  98:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		is used to determine who owns the block - the application or the
  99:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		kernel, so it must be free. */
 100:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 101:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 102:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			/* The wanted size is increased so it can contain a BlockLink_t
 103:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			structure in addition to the requested amount of bytes. */
 104:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			if( xWantedSize > 0 )
 105:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 106:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				xWantedSize += xHeapStructSize;
 107:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 108:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				/* Ensure that blocks are always aligned to the required number
 109:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				of bytes. */
 110:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 111:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 112:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* Byte alignment required. */
 113:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 114:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 115:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 116:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				else
 117:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 118:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					mtCOVERAGE_TEST_MARKER();
 119:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 120:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 121:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			else
 122:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 123:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				mtCOVERAGE_TEST_MARKER();
 124:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 125:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 126:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 127:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 128:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				/* Traverse the list from the start	(lowest address) block until
 129:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				one	of adequate size is found. */
 130:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				pxPreviousBlock = &xStart;
 131:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				pxBlock = xStart.pxNextFreeBlock;
 132:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 133:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 134:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxPreviousBlock = pxBlock;
 135:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock = pxBlock->pxNextFreeBlock;
 136:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 137:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 138:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				/* If the end marker was reached then a block of adequate size
 139:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				was	not found. */
 140:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				if( pxBlock != pxEnd )
 141:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 142:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* Return the memory space pointed to - jumping over the
 143:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					BlockLink_t structure at its start. */
 144:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize )
 145:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 146:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* This block is being returned for use so must be taken out
 147:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					of the list of free blocks. */
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 4


 148:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 149:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 150:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* If the block is larger than required it can be split into
 151:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					two. */
 152:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 153:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 154:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						/* This block is to be split into two.  Create a new
 155:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						block following the number of bytes requested. The void
 156:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						cast is used to prevent byte alignment warnings from the
 157:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						compiler. */
 158:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 159:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 160:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 161:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						/* Calculate the sizes of two blocks split from the
 162:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						single block. */
 163:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 164:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						pxBlock->xBlockSize = xWantedSize;
 165:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 166:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						/* Insert the new block into the list of free blocks. */
 167:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						prvInsertBlockIntoFreeList( pxNewBlockLink );
 168:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 169:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					else
 170:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 171:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						mtCOVERAGE_TEST_MARKER();
 172:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 173:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 174:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					xFreeBytesRemaining -= pxBlock->xBlockSize;
 175:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 176:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 177:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 178:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 179:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 180:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					else
 181:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 182:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						mtCOVERAGE_TEST_MARKER();
 183:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 184:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 185:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* The block is being returned - it is allocated and owned
 186:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					by the application and has no "next" block. */
 187:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock->xBlockSize |= xBlockAllocatedBit;
 188:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock->pxNextFreeBlock = NULL;
 189:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 190:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				else
 191:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 192:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					mtCOVERAGE_TEST_MARKER();
 193:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 194:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 195:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			else
 196:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 197:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				mtCOVERAGE_TEST_MARKER();
 198:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 199:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 200:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		else
 201:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 202:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			mtCOVERAGE_TEST_MARKER();
 203:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 204:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 5


 205:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		traceMALLOC( pvReturn, xWantedSize );
 206:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 207:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	( void ) xTaskResumeAll();
 208:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 209:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
 210:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 211:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if( pvReturn == NULL )
 212:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 213:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			extern void vApplicationMallocFailedHook( void );
 214:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			vApplicationMallocFailedHook();
 215:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 216:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		else
 217:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 218:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			mtCOVERAGE_TEST_MARKER();
 219:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 220:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 221:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	#endif
 222:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 223:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 224:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 225:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 226:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 227:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 228:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void vPortFreeMicroROS( void *pv )
 229:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 230:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** uint8_t *puc = ( uint8_t * ) pv;
 231:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxLink;
 232:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 233:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if( pv != NULL )
 234:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 235:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* The memory being freed will have an BlockLink_t structure immediately
 236:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		before it. */
 237:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		puc -= xHeapStructSize;
 238:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 239:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* This casting is to keep the compiler from issuing warnings. */
 240:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxLink = ( void * ) puc;
 241:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 242:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* Check the block is actually allocated. */
 243:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 244:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 245:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 246:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 )
 247:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 248:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			if( pxLink->pxNextFreeBlock == NULL )
 249:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 250:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				/* The block is being returned to the heap - it is no longer
 251:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				allocated. */
 252:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 253:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 254:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				vTaskSuspendAll();
 255:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 256:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* Add this block to the list of free blocks. */
 257:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					xFreeBytesRemaining += pxLink->xBlockSize;
 258:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					traceFREE( pv, pxLink->xBlockSize );
 259:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 260:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 261:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				( void ) xTaskResumeAll();
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 6


 262:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 263:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			else
 264:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 265:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				mtCOVERAGE_TEST_MARKER();
 266:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 267:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 268:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		else
 269:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 270:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			mtCOVERAGE_TEST_MARKER();
 271:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 272:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 273:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 274:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 275:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 276:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 277:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** size_t getBlockSize( void *pv )
 278:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 279:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 280:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	uint8_t *puc = ( uint8_t * ) pv;
 281:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	BlockLink_t *pxLink;
 282:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 283:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	puc -= xHeapStructSize;
 284:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxLink = ( void * ) puc;
 285:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 286:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	size_t count = pxLink->xBlockSize & ~xBlockAllocatedBit;
 287:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 288:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return count;
 289:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 290:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 291:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 292:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void *pvPortReallocMicroROS( void *pv, size_t xWantedSize )
 293:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 294:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 295:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 296:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	void * newmem = pvPortMallocMicroROS(xWantedSize);
 297:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if (newmem != NULL && pv != NULL)
 298:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 299:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		size_t count = getBlockSize(pv) - xHeapStructSize;
 300:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 301:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 302:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			count = xWantedSize;
 303:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 304:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		memcpy(newmem, pv, count);
 305:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 306:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		vPortFreeMicroROS(pv);
 307:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 308:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 309:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	( void ) xTaskResumeAll();
 310:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 311:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return newmem;
 312:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 313:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 314:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 315:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void *pvPortCallocMicroROS( size_t num, size_t xWantedSize )
 316:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 317:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 318:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	size_t count = xWantedSize*num;
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 7


 319:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 320:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	void * mem = pvPortMallocMicroROS(count);
 321:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	char *in_dest = (char*)mem;
 322:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 323:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	while(count--)
 324:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 325:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 326:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	( void ) xTaskResumeAll();
 327:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	return mem;
 328:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 329:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 330:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 331:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** size_t xPortGetFreeHeapSizeMicroROS( void )
 332:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 333:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return xFreeBytesRemaining;
 334:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 335:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 336:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 337:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** size_t xPortGetMinimumEverFreeHeapSizeMicroROS( void )
 338:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 339:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return xMinimumEverFreeBytesRemaining;
 340:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 341:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 342:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 343:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void vPortInitialiseBlocksMicroROS( void )
 344:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 345:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* This just exists to keep the linker quiet. */
 346:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 347:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 348:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 349:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static void prvHeapInit( void )
 350:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
  26              		.loc 1 350 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 351:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxFirstFreeBlock;
  31              		.loc 1 351 1 view .LVU1
 352:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** uint8_t *pucAlignedHeap;
  32              		.loc 1 352 1 view .LVU2
 353:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** size_t uxAddress;
  33              		.loc 1 353 1 view .LVU3
 354:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
  34              		.loc 1 354 1 view .LVU4
  35              	.LVL0:
 355:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 356:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Ensure the heap starts on a correctly aligned boundary. */
 357:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	uxAddress = ( size_t ) ucHeap;
  36              		.loc 1 357 2 view .LVU5
  37              		.loc 1 357 12 is_stmt 0 view .LVU6
  38 0000 124A     		ldr	r2, .L4
  39              	.LVL1:
 358:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 359:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
  40              		.loc 1 359 2 is_stmt 1 view .LVU7
  41              		.loc 1 359 4 is_stmt 0 view .LVU8
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 8


  42 0002 12F0070F 		tst	r2, #7
  43 0006 1ED0     		beq	.L3
 360:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 361:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		uxAddress += ( portBYTE_ALIGNMENT - 1 );
  44              		.loc 1 361 3 is_stmt 1 view .LVU9
  45              		.loc 1 361 13 is_stmt 0 view .LVU10
  46 0008 D11D     		adds	r1, r2, #7
  47              	.LVL2:
 362:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
  48              		.loc 1 362 3 is_stmt 1 view .LVU11
  49              		.loc 1 362 13 is_stmt 0 view .LVU12
  50 000a 21F00701 		bic	r1, r1, #7
  51              	.LVL3:
 363:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
  52              		.loc 1 363 3 is_stmt 1 view .LVU13
  53              		.loc 1 363 18 is_stmt 0 view .LVU14
  54 000e C1F54063 		rsb	r3, r1, #3072
  55 0012 1344     		add	r3, r3, r2
  56              	.LVL4:
 362:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
  57              		.loc 1 362 13 view .LVU15
  58 0014 0A46     		mov	r2, r1
  59              	.LVL5:
  60              	.L2:
 364:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 365:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 366:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pucAlignedHeap = ( uint8_t * ) uxAddress;
  61              		.loc 1 366 2 is_stmt 1 view .LVU16
 367:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 368:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* xStart is used to hold a pointer to the first item in the list of free
 369:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	blocks.  The void cast is used to prevent compiler warnings. */
 370:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
  62              		.loc 1 370 2 view .LVU17
  63              		.loc 1 370 25 is_stmt 0 view .LVU18
  64 0016 0E48     		ldr	r0, .L4+4
  65 0018 0260     		str	r2, [r0]
 371:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	xStart.xBlockSize = ( size_t ) 0;
  66              		.loc 1 371 2 is_stmt 1 view .LVU19
  67              		.loc 1 371 20 is_stmt 0 view .LVU20
  68 001a 0021     		movs	r1, #0
  69 001c 4160     		str	r1, [r0, #4]
 372:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 373:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* pxEnd is used to mark the end of the list of free blocks and is inserted
 374:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	at the end of the heap space. */
 375:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
  70              		.loc 1 375 2 is_stmt 1 view .LVU21
  71              		.loc 1 375 12 is_stmt 0 view .LVU22
  72 001e 1344     		add	r3, r3, r2
  73              	.LVL6:
 376:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	uxAddress -= xHeapStructSize;
  74              		.loc 1 376 2 is_stmt 1 view .LVU23
  75              		.loc 1 376 12 is_stmt 0 view .LVU24
  76 0020 083B     		subs	r3, r3, #8
  77              	.LVL7:
 377:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
  78              		.loc 1 377 2 is_stmt 1 view .LVU25
  79              		.loc 1 377 12 is_stmt 0 view .LVU26
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 9


  80 0022 23F00703 		bic	r3, r3, #7
  81              	.LVL8:
 378:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxEnd = ( void * ) uxAddress;
  82              		.loc 1 378 2 is_stmt 1 view .LVU27
  83              		.loc 1 378 8 is_stmt 0 view .LVU28
  84 0026 0B48     		ldr	r0, .L4+8
  85 0028 0360     		str	r3, [r0]
 379:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxEnd->xBlockSize = 0;
  86              		.loc 1 379 2 is_stmt 1 view .LVU29
  87              		.loc 1 379 20 is_stmt 0 view .LVU30
  88 002a 5960     		str	r1, [r3, #4]
 380:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxEnd->pxNextFreeBlock = NULL;
  89              		.loc 1 380 2 is_stmt 1 view .LVU31
  90              		.loc 1 380 25 is_stmt 0 view .LVU32
  91 002c 1960     		str	r1, [r3]
 381:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 382:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* To start with there is a single free block that is sized to take up the
 383:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	entire heap space, minus the space taken by pxEnd. */
 384:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
  92              		.loc 1 384 2 is_stmt 1 view .LVU33
  93              	.LVL9:
 385:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
  94              		.loc 1 385 2 view .LVU34
  95              		.loc 1 385 43 is_stmt 0 view .LVU35
  96 002e 991A     		subs	r1, r3, r2
  97              		.loc 1 385 31 view .LVU36
  98 0030 5160     		str	r1, [r2, #4]
 386:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
  99              		.loc 1 386 2 is_stmt 1 view .LVU37
 100              		.loc 1 386 36 is_stmt 0 view .LVU38
 101 0032 1360     		str	r3, [r2]
 387:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 388:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Only one block exists - and it covers the entire usable heap space. */
 389:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 102              		.loc 1 389 2 is_stmt 1 view .LVU39
 103              		.loc 1 389 33 is_stmt 0 view .LVU40
 104 0034 084B     		ldr	r3, .L4+12
 105              	.LVL10:
 106              		.loc 1 389 33 view .LVU41
 107 0036 1960     		str	r1, [r3]
 390:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 108              		.loc 1 390 2 is_stmt 1 view .LVU42
 109              		.loc 1 390 22 is_stmt 0 view .LVU43
 110 0038 084B     		ldr	r3, .L4+16
 111 003a 1960     		str	r1, [r3]
 391:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 392:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Work out the position of the top bit in a size_t variable. */
 393:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 112              		.loc 1 393 2 is_stmt 1 view .LVU44
 113              		.loc 1 393 21 is_stmt 0 view .LVU45
 114 003c 084B     		ldr	r3, .L4+20
 115 003e 4FF00042 		mov	r2, #-2147483648
 116              	.LVL11:
 117              		.loc 1 393 21 view .LVU46
 118 0042 1A60     		str	r2, [r3]
 394:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 119              		.loc 1 394 1 view .LVU47
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 10


 120 0044 7047     		bx	lr
 121              	.LVL12:
 122              	.L3:
 354:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 123              		.loc 1 354 8 view .LVU48
 124 0046 4FF44063 		mov	r3, #3072
 125 004a E4E7     		b	.L2
 126              	.L5:
 127              		.align	2
 128              	.L4:
 129 004c 00000000 		.word	.LANCHOR0
 130 0050 00000000 		.word	.LANCHOR1
 131 0054 00000000 		.word	.LANCHOR2
 132 0058 00000000 		.word	.LANCHOR3
 133 005c 00000000 		.word	.LANCHOR4
 134 0060 00000000 		.word	.LANCHOR5
 135              		.cfi_endproc
 136              	.LFE12:
 138              		.section	.text.prvInsertBlockIntoFreeList,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu softvfp
 145              	prvInsertBlockIntoFreeList:
 146              	.LVL13:
 147              	.LFB13:
 395:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 396:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 397:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
 398:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 148              		.loc 1 398 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 399:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxIterator;
 153              		.loc 1 399 1 view .LVU50
 400:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** uint8_t *puc;
 154              		.loc 1 400 1 view .LVU51
 401:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 402:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Iterate through the list until a block is found that has a higher address
 403:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	than the block being inserted. */
 404:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator-
 155              		.loc 1 404 2 view .LVU52
 156              		.loc 1 404 18 is_stmt 0 view .LVU53
 157 0000 154B     		ldr	r3, .L21
 158              	.LVL14:
 159              	.L7:
 160              		.loc 1 404 29 is_stmt 1 discriminator 1 view .LVU54
 161 0002 1A46     		mov	r2, r3
 162              		.loc 1 404 39 is_stmt 0 discriminator 1 view .LVU55
 163 0004 1B68     		ldr	r3, [r3]
 164              	.LVL15:
 165              		.loc 1 404 2 discriminator 1 view .LVU56
 166 0006 8342     		cmp	r3, r0
 167 0008 FBD3     		bcc	.L7
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 11


 405:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 406:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* Nothing to do here, just iterate to the right position. */
 407:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 408:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 409:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Do the block being inserted, and the block it is being inserted after
 410:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	make a contiguous block of memory? */
 411:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	puc = ( uint8_t * ) pxIterator;
 168              		.loc 1 411 2 is_stmt 1 view .LVU57
 169              	.LVL16:
 412:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 170              		.loc 1 412 2 view .LVU58
 171              		.loc 1 412 24 is_stmt 0 view .LVU59
 172 000a 5168     		ldr	r1, [r2, #4]
 173              		.loc 1 412 12 view .LVU60
 174 000c 02EB010C 		add	ip, r2, r1
 175              		.loc 1 412 4 view .LVU61
 176 0010 8445     		cmp	ip, r0
 177 0012 09D0     		beq	.L19
 178              	.L8:
 413:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 414:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 415:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxBlockToInsert = pxIterator;
 416:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 417:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	else
 418:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 419:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		mtCOVERAGE_TEST_MARKER();
 179              		.loc 1 419 27 is_stmt 1 view .LVU62
 420:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 421:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 422:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Do the block being inserted, and the block it is being inserted before
 423:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	make a contiguous block of memory? */
 424:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	puc = ( uint8_t * ) pxBlockToInsert;
 180              		.loc 1 424 2 view .LVU63
 181              	.LVL17:
 425:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 182              		.loc 1 425 2 view .LVU64
 183              		.loc 1 425 29 is_stmt 0 view .LVU65
 184 0014 4168     		ldr	r1, [r0, #4]
 185              		.loc 1 425 12 view .LVU66
 186 0016 00EB010C 		add	ip, r0, r1
 187              		.loc 1 425 4 view .LVU67
 188 001a 6345     		cmp	r3, ip
 189 001c 09D0     		beq	.L20
 426:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 427:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if( pxIterator->pxNextFreeBlock != pxEnd )
 428:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 429:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			/* Form one big block from the two blocks. */
 430:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 431:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 432:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 433:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		else
 434:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 435:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 436:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 437:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 438:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	else
 439:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 12


 440:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 190              		.loc 1 440 3 is_stmt 1 view .LVU68
 191              		.loc 1 440 36 is_stmt 0 view .LVU69
 192 001e 0360     		str	r3, [r0]
 441:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 442:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 443:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* If the block being inserted plugged a gab, so was merged with the block
 444:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	before and the block after, then it's pxNextFreeBlock pointer will have
 445:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	already been set, and should not be set here as that would make it point
 446:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	to itself. */
 447:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if( pxIterator != pxBlockToInsert )
 193              		.loc 1 447 2 is_stmt 1 view .LVU70
 194              		.loc 1 447 4 is_stmt 0 view .LVU71
 195 0020 9042     		cmp	r0, r2
 196 0022 18D0     		beq	.L16
 448:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 449:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 197              		.loc 1 449 3 is_stmt 1 view .LVU72
 198              		.loc 1 449 31 is_stmt 0 view .LVU73
 199 0024 1060     		str	r0, [r2]
 450:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 451:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	else
 452:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 453:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		mtCOVERAGE_TEST_MARKER();
 200              		.loc 1 453 27 is_stmt 1 view .LVU74
 201 0026 7047     		bx	lr
 202              	.LVL18:
 203              	.L19:
 414:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxBlockToInsert = pxIterator;
 204              		.loc 1 414 3 view .LVU75
 414:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxBlockToInsert = pxIterator;
 205              		.loc 1 414 44 is_stmt 0 view .LVU76
 206 0028 4068     		ldr	r0, [r0, #4]
 207              	.LVL19:
 414:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxBlockToInsert = pxIterator;
 208              		.loc 1 414 26 view .LVU77
 209 002a 0144     		add	r1, r1, r0
 210 002c 5160     		str	r1, [r2, #4]
 415:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 211              		.loc 1 415 3 is_stmt 1 view .LVU78
 212              	.LVL20:
 415:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 213              		.loc 1 415 19 is_stmt 0 view .LVU79
 214 002e 1046     		mov	r0, r2
 215 0030 F0E7     		b	.L8
 216              	.LVL21:
 217              	.L20:
 398:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxIterator;
 218              		.loc 1 398 1 view .LVU80
 219 0032 10B4     		push	{r4}
 220              	.LCFI0:
 221              		.cfi_def_cfa_offset 4
 222              		.cfi_offset 4, -4
 427:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 223              		.loc 1 427 3 is_stmt 1 view .LVU81
 427:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 224              		.loc 1 427 35 is_stmt 0 view .LVU82
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 13


 225 0034 094C     		ldr	r4, .L21+4
 226 0036 2468     		ldr	r4, [r4]
 427:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 227              		.loc 1 427 5 view .LVU83
 228 0038 A342     		cmp	r3, r4
 229 003a 0AD0     		beq	.L10
 430:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 230              		.loc 1 430 4 is_stmt 1 view .LVU84
 430:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 231              		.loc 1 430 62 is_stmt 0 view .LVU85
 232 003c 5B68     		ldr	r3, [r3, #4]
 430:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 233              		.loc 1 430 32 view .LVU86
 234 003e 1944     		add	r1, r1, r3
 235 0040 4160     		str	r1, [r0, #4]
 431:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 236              		.loc 1 431 4 is_stmt 1 view .LVU87
 431:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 237              		.loc 1 431 49 is_stmt 0 view .LVU88
 238 0042 1368     		ldr	r3, [r2]
 431:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 239              		.loc 1 431 66 view .LVU89
 240 0044 1B68     		ldr	r3, [r3]
 431:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 241              		.loc 1 431 37 view .LVU90
 242 0046 0360     		str	r3, [r0]
 243              	.L11:
 447:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 244              		.loc 1 447 2 is_stmt 1 view .LVU91
 447:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 245              		.loc 1 447 4 is_stmt 0 view .LVU92
 246 0048 9042     		cmp	r0, r2
 247 004a 00D0     		beq	.L6
 449:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 248              		.loc 1 449 3 is_stmt 1 view .LVU93
 449:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 249              		.loc 1 449 31 is_stmt 0 view .LVU94
 250 004c 1060     		str	r0, [r2]
 251              		.loc 1 453 27 is_stmt 1 view .LVU95
 252              	.L6:
 454:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 455:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 253              		.loc 1 455 1 is_stmt 0 view .LVU96
 254 004e 10BC     		pop	{r4}
 255              	.LCFI1:
 256              		.cfi_remember_state
 257              		.cfi_restore 4
 258              		.cfi_def_cfa_offset 0
 259 0050 7047     		bx	lr
 260              	.L10:
 261              	.LCFI2:
 262              		.cfi_restore_state
 435:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 263              		.loc 1 435 4 is_stmt 1 view .LVU97
 435:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 264              		.loc 1 435 37 is_stmt 0 view .LVU98
 265 0052 0460     		str	r4, [r0]
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 14


 266 0054 F8E7     		b	.L11
 267              	.L16:
 268              	.LCFI3:
 269              		.cfi_def_cfa_offset 0
 270              		.cfi_restore 4
 435:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 271              		.loc 1 435 37 view .LVU99
 272 0056 7047     		bx	lr
 273              	.L22:
 274              		.align	2
 275              	.L21:
 276 0058 00000000 		.word	.LANCHOR1
 277 005c 00000000 		.word	.LANCHOR2
 278              		.cfi_endproc
 279              	.LFE13:
 281              		.section	.text.pvPortMallocMicroROS,"ax",%progbits
 282              		.align	1
 283              		.global	pvPortMallocMicroROS
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 287              		.fpu softvfp
 289              	pvPortMallocMicroROS:
 290              	.LVL22:
 291              	.LFB4:
  79:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 292              		.loc 1 79 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
  79:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 296              		.loc 1 79 1 is_stmt 0 view .LVU101
 297 0000 70B5     		push	{r4, r5, r6, lr}
 298              	.LCFI4:
 299              		.cfi_def_cfa_offset 16
 300              		.cfi_offset 4, -16
 301              		.cfi_offset 5, -12
 302              		.cfi_offset 6, -8
 303              		.cfi_offset 14, -4
 304 0002 0546     		mov	r5, r0
  80:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void *pvReturn = NULL;
 305              		.loc 1 80 1 is_stmt 1 view .LVU102
  81:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 306              		.loc 1 81 1 view .LVU103
 307              	.LVL23:
  83:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 308              		.loc 1 83 2 view .LVU104
 309 0004 FFF7FEFF 		bl	vTaskSuspendAll
 310              	.LVL24:
  87:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 311              		.loc 1 87 3 view .LVU105
  87:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 312              		.loc 1 87 13 is_stmt 0 view .LVU106
 313 0008 344B     		ldr	r3, .L42
 314 000a 1B68     		ldr	r3, [r3]
  87:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 315              		.loc 1 87 5 view .LVU107
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 15


 316 000c A3B1     		cbz	r3, .L41
 317              	.L24:
  93:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 318              		.loc 1 93 28 is_stmt 1 view .LVU108
 100:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 319              		.loc 1 100 3 view .LVU109
 100:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 320              		.loc 1 100 21 is_stmt 0 view .LVU110
 321 000e 344B     		ldr	r3, .L42+4
 322 0010 1B68     		ldr	r3, [r3]
 100:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 323              		.loc 1 100 5 view .LVU111
 324 0012 1D42     		tst	r5, r3
 325 0014 4AD1     		bne	.L35
 104:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 326              		.loc 1 104 4 is_stmt 1 view .LVU112
 104:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 327              		.loc 1 104 6 is_stmt 0 view .LVU113
 328 0016 35B1     		cbz	r5, .L26
 106:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 329              		.loc 1 106 5 is_stmt 1 view .LVU114
 106:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 330              		.loc 1 106 17 is_stmt 0 view .LVU115
 331 0018 0835     		adds	r5, r5, #8
 332              	.LVL25:
 110:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 333              		.loc 1 110 5 is_stmt 1 view .LVU116
 110:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 334              		.loc 1 110 7 is_stmt 0 view .LVU117
 335 001a 15F0070F 		tst	r5, #7
 336 001e 02D0     		beq	.L26
 113:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 337              		.loc 1 113 6 is_stmt 1 view .LVU118
 113:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 338              		.loc 1 113 18 is_stmt 0 view .LVU119
 339 0020 25F00705 		bic	r5, r5, #7
 340              	.LVL26:
 113:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 341              		.loc 1 113 18 view .LVU120
 342 0024 0835     		adds	r5, r5, #8
 343              	.LVL27:
 114:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 344              		.loc 1 114 6 is_stmt 1 view .LVU121
 345              	.L26:
 123:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 346              		.loc 1 123 29 view .LVU122
 126:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 347              		.loc 1 126 4 view .LVU123
 126:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 348              		.loc 1 126 6 is_stmt 0 view .LVU124
 349 0026 002D     		cmp	r5, #0
 350 0028 42D0     		beq	.L36
 126:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 351              		.loc 1 126 45 discriminator 1 view .LVU125
 352 002a 2E4B     		ldr	r3, .L42+8
 353 002c 1B68     		ldr	r3, [r3]
 126:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 16


 354              		.loc 1 126 28 discriminator 1 view .LVU126
 355 002e AB42     		cmp	r3, r5
 356 0030 4DD3     		bcc	.L37
 130:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				pxBlock = xStart.pxNextFreeBlock;
 357              		.loc 1 130 5 is_stmt 1 view .LVU127
 358              	.LVL28:
 131:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 359              		.loc 1 131 5 view .LVU128
 131:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 360              		.loc 1 131 13 is_stmt 0 view .LVU129
 361 0032 2D4A     		ldr	r2, .L42+12
 362 0034 1468     		ldr	r4, [r2]
 363              	.LVL29:
 132:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 364              		.loc 1 132 5 is_stmt 1 view .LVU130
 132:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 365              		.loc 1 132 10 is_stmt 0 view .LVU131
 366 0036 04E0     		b	.L28
 367              	.LVL30:
 368              	.L41:
  89:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 369              		.loc 1 89 4 is_stmt 1 view .LVU132
 370 0038 FFF7FEFF 		bl	prvHeapInit
 371              	.LVL31:
 372 003c E7E7     		b	.L24
 373              	.LVL32:
 374              	.L38:
 134:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock = pxBlock->pxNextFreeBlock;
 375              		.loc 1 134 22 is_stmt 0 view .LVU133
 376 003e 2246     		mov	r2, r4
 377              	.LVL33:
 135:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 378              		.loc 1 135 14 view .LVU134
 379 0040 1C46     		mov	r4, r3
 380              	.LVL34:
 381              	.L28:
 132:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 382              		.loc 1 132 10 is_stmt 1 view .LVU135
 132:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 383              		.loc 1 132 21 is_stmt 0 view .LVU136
 384 0042 6368     		ldr	r3, [r4, #4]
 132:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 385              		.loc 1 132 10 view .LVU137
 386 0044 AB42     		cmp	r3, r5
 387 0046 02D2     		bcs	.L27
 132:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 388              		.loc 1 132 62 discriminator 1 view .LVU138
 389 0048 2368     		ldr	r3, [r4]
 132:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 390              		.loc 1 132 50 discriminator 1 view .LVU139
 391 004a 002B     		cmp	r3, #0
 392 004c F7D1     		bne	.L38
 393              	.L27:
 140:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 394              		.loc 1 140 5 is_stmt 1 view .LVU140
 140:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 395              		.loc 1 140 17 is_stmt 0 view .LVU141
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 17


 396 004e 234B     		ldr	r3, .L42
 397 0050 1B68     		ldr	r3, [r3]
 140:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 398              		.loc 1 140 7 view .LVU142
 399 0052 A342     		cmp	r3, r4
 400 0054 3DD0     		beq	.L39
 144:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 401              		.loc 1 144 6 is_stmt 1 view .LVU143
 144:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 402              		.loc 1 144 61 is_stmt 0 view .LVU144
 403 0056 1668     		ldr	r6, [r2]
 144:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 404              		.loc 1 144 15 view .LVU145
 405 0058 0836     		adds	r6, r6, #8
 406              	.LVL35:
 148:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 407              		.loc 1 148 6 is_stmt 1 view .LVU146
 148:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 408              		.loc 1 148 48 is_stmt 0 view .LVU147
 409 005a 2368     		ldr	r3, [r4]
 148:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 410              		.loc 1 148 39 view .LVU148
 411 005c 1360     		str	r3, [r2]
 152:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 412              		.loc 1 152 6 is_stmt 1 view .LVU149
 152:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 413              		.loc 1 152 19 is_stmt 0 view .LVU150
 414 005e 6368     		ldr	r3, [r4, #4]
 152:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 415              		.loc 1 152 32 view .LVU151
 416 0060 5B1B     		subs	r3, r3, r5
 152:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 417              		.loc 1 152 8 view .LVU152
 418 0062 102B     		cmp	r3, #16
 419 0064 10D9     		bls	.L29
 158:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 420              		.loc 1 158 7 is_stmt 1 view .LVU153
 158:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 421              		.loc 1 158 22 is_stmt 0 view .LVU154
 422 0066 6019     		adds	r0, r4, r5
 423              	.LVL36:
 159:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 424              		.loc 1 159 7 is_stmt 1 view .LVU155
 425 0068 10F0070F 		tst	r0, #7
 426 006c 08D0     		beq	.L30
 159:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 427              		.loc 1 159 7 view .LVU156
 428              	.LBB12:
 429              	.LBI12:
 430              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 18


   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 19


  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 20


 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 21


 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 431              		.loc 2 191 30 view .LVU157
 432              	.LBB13:
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 433              		.loc 2 193 1 view .LVU158
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 434              		.loc 2 195 2 view .LVU159
 435              		.syntax unified
 436              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 437 006e 4FF05003 			mov r3, #80												
 438 0072 83F31188 		msr basepri, r3											
 439 0076 BFF36F8F 		isb														
 440 007a BFF34F8F 		dsb														
 441              	
 442              	@ 0 "" 2
 443              	.LVL37:
 444              		.thumb
 445              		.syntax unified
 446              	.L31:
 447              		.loc 2 195 2 is_stmt 0 view .LVU160
 448              	.LBE13:
 449              	.LBE12:
 159:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 450              		.loc 1 159 7 is_stmt 1 discriminator 3 view .LVU161
 159:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 451              		.loc 1 159 7 discriminator 3 view .LVU162
 159:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 452              		.loc 1 159 7 discriminator 3 view .LVU163
 453 007e FEE7     		b	.L31
 454              	.L30:
 159:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 455              		.loc 1 159 87 discriminator 2 view .LVU164
 163:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						pxBlock->xBlockSize = xWantedSize;
 456              		.loc 1 163 7 discriminator 2 view .LVU165
 163:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						pxBlock->xBlockSize = xWantedSize;
 457              		.loc 1 163 34 is_stmt 0 discriminator 2 view .LVU166
 458 0080 4360     		str	r3, [r0, #4]
 164:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 459              		.loc 1 164 7 is_stmt 1 discriminator 2 view .LVU167
 164:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 460              		.loc 1 164 27 is_stmt 0 discriminator 2 view .LVU168
 461 0082 6560     		str	r5, [r4, #4]
 167:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 22


 462              		.loc 1 167 7 is_stmt 1 discriminator 2 view .LVU169
 463 0084 FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 464              	.LVL38:
 465              	.L29:
 171:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 466              		.loc 1 171 31 view .LVU170
 174:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 467              		.loc 1 174 6 view .LVU171
 174:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 468              		.loc 1 174 36 is_stmt 0 view .LVU172
 469 0088 6268     		ldr	r2, [r4, #4]
 174:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 470              		.loc 1 174 26 view .LVU173
 471 008a 1649     		ldr	r1, .L42+8
 472 008c 0B68     		ldr	r3, [r1]
 473 008e 9B1A     		subs	r3, r3, r2
 474 0090 0B60     		str	r3, [r1]
 176:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 475              		.loc 1 176 6 is_stmt 1 view .LVU174
 176:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 476              		.loc 1 176 30 is_stmt 0 view .LVU175
 477 0092 1649     		ldr	r1, .L42+16
 478 0094 0968     		ldr	r1, [r1]
 176:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 479              		.loc 1 176 8 view .LVU176
 480 0096 8B42     		cmp	r3, r1
 481 0098 01D2     		bcs	.L32
 178:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 482              		.loc 1 178 7 is_stmt 1 view .LVU177
 178:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 483              		.loc 1 178 38 is_stmt 0 view .LVU178
 484 009a 1449     		ldr	r1, .L42+16
 485 009c 0B60     		str	r3, [r1]
 486              	.L32:
 182:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 487              		.loc 1 182 31 is_stmt 1 view .LVU179
 187:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock->pxNextFreeBlock = NULL;
 488              		.loc 1 187 6 view .LVU180
 187:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock->pxNextFreeBlock = NULL;
 489              		.loc 1 187 26 is_stmt 0 view .LVU181
 490 009e 104B     		ldr	r3, .L42+4
 491 00a0 1B68     		ldr	r3, [r3]
 492 00a2 1343     		orrs	r3, r3, r2
 493 00a4 6360     		str	r3, [r4, #4]
 188:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 494              		.loc 1 188 6 is_stmt 1 view .LVU182
 188:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 495              		.loc 1 188 31 is_stmt 0 view .LVU183
 496 00a6 0023     		movs	r3, #0
 497 00a8 2360     		str	r3, [r4]
 498 00aa 02E0     		b	.L25
 499              	.LVL39:
 500              	.L35:
  81:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 501              		.loc 1 81 7 view .LVU184
 502 00ac 0026     		movs	r6, #0
 503 00ae 00E0     		b	.L25
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 23


 504              	.L36:
  81:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 505              		.loc 1 81 7 view .LVU185
 506 00b0 0026     		movs	r6, #0
 507              	.LVL40:
 508              	.L25:
 202:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 509              		.loc 1 202 28 is_stmt 1 view .LVU186
 205:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 510              		.loc 1 205 39 view .LVU187
 207:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 511              		.loc 1 207 2 view .LVU188
 207:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 512              		.loc 1 207 11 is_stmt 0 view .LVU189
 513 00b2 FFF7FEFF 		bl	xTaskResumeAll
 514              	.LVL41:
 223:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 515              		.loc 1 223 2 is_stmt 1 view .LVU190
 516 00b6 16F0070F 		tst	r6, #7
 517 00ba 0CD0     		beq	.L23
 223:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 518              		.loc 1 223 2 view .LVU191
 519              	.LBB14:
 520              	.LBI14:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 521              		.loc 2 191 30 view .LVU192
 522              	.LBB15:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 523              		.loc 2 193 1 view .LVU193
 524              		.loc 2 195 2 view .LVU194
 525              		.syntax unified
 526              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 527 00bc 4FF05003 			mov r3, #80												
 528 00c0 83F31188 		msr basepri, r3											
 529 00c4 BFF36F8F 		isb														
 530 00c8 BFF34F8F 		dsb														
 531              	
 532              	@ 0 "" 2
 533              	.LVL42:
 534              		.thumb
 535              		.syntax unified
 536              	.L34:
 537              		.loc 2 195 2 is_stmt 0 view .LVU195
 538              	.LBE15:
 539              	.LBE14:
 223:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 540              		.loc 1 223 2 is_stmt 1 discriminator 5 view .LVU196
 223:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 541              		.loc 1 223 2 discriminator 5 view .LVU197
 223:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 542              		.loc 1 223 2 discriminator 5 view .LVU198
 543 00cc FEE7     		b	.L34
 544              	.LVL43:
 545              	.L37:
  81:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 546              		.loc 1 81 7 is_stmt 0 view .LVU199
 547 00ce 0026     		movs	r6, #0
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 24


 548 00d0 EFE7     		b	.L25
 549              	.LVL44:
 550              	.L39:
  81:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 551              		.loc 1 81 7 view .LVU200
 552 00d2 0026     		movs	r6, #0
 553 00d4 EDE7     		b	.L25
 554              	.LVL45:
 555              	.L23:
 225:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 556              		.loc 1 225 1 view .LVU201
 557 00d6 3046     		mov	r0, r6
 558 00d8 70BD     		pop	{r4, r5, r6, pc}
 559              	.LVL46:
 560              	.L43:
 225:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 561              		.loc 1 225 1 view .LVU202
 562 00da 00BF     		.align	2
 563              	.L42:
 564 00dc 00000000 		.word	.LANCHOR2
 565 00e0 00000000 		.word	.LANCHOR5
 566 00e4 00000000 		.word	.LANCHOR4
 567 00e8 00000000 		.word	.LANCHOR1
 568 00ec 00000000 		.word	.LANCHOR3
 569              		.cfi_endproc
 570              	.LFE4:
 572              		.section	.text.vPortFreeMicroROS,"ax",%progbits
 573              		.align	1
 574              		.global	vPortFreeMicroROS
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 578              		.fpu softvfp
 580              	vPortFreeMicroROS:
 581              	.LVL47:
 582              	.LFB5:
 229:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** uint8_t *puc = ( uint8_t * ) pv;
 583              		.loc 1 229 1 is_stmt 1 view -0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 230:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxLink;
 587              		.loc 1 230 1 view .LVU204
 231:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 588              		.loc 1 231 1 view .LVU205
 233:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 589              		.loc 1 233 2 view .LVU206
 233:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 590              		.loc 1 233 4 is_stmt 0 view .LVU207
 591 0000 80B3     		cbz	r0, .L51
 229:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** uint8_t *puc = ( uint8_t * ) pv;
 592              		.loc 1 229 1 view .LVU208
 593 0002 38B5     		push	{r3, r4, r5, lr}
 594              	.LCFI5:
 595              		.cfi_def_cfa_offset 16
 596              		.cfi_offset 3, -16
 597              		.cfi_offset 4, -12
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 25


 598              		.cfi_offset 5, -8
 599              		.cfi_offset 14, -4
 600 0004 0446     		mov	r4, r0
 237:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 601              		.loc 1 237 3 is_stmt 1 view .LVU209
 237:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 602              		.loc 1 237 7 is_stmt 0 view .LVU210
 603 0006 A0F10805 		sub	r5, r0, #8
 604              	.LVL48:
 240:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 605              		.loc 1 240 3 is_stmt 1 view .LVU211
 243:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 606              		.loc 1 243 3 view .LVU212
 607 000a 50F8043C 		ldr	r3, [r0, #-4]
 608 000e 164A     		ldr	r2, .L54
 609 0010 1268     		ldr	r2, [r2]
 610 0012 1342     		tst	r3, r2
 611 0014 08D1     		bne	.L46
 243:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 612              		.loc 1 243 3 view .LVU213
 613              	.LBB16:
 614              	.LBI16:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 615              		.loc 2 191 30 view .LVU214
 616              	.LBB17:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 617              		.loc 2 193 1 view .LVU215
 618              		.loc 2 195 2 view .LVU216
 619              		.syntax unified
 620              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 621 0016 4FF05003 			mov r3, #80												
 622 001a 83F31188 		msr basepri, r3											
 623 001e BFF36F8F 		isb														
 624 0022 BFF34F8F 		dsb														
 625              	
 626              	@ 0 "" 2
 627              	.LVL49:
 628              		.thumb
 629              		.syntax unified
 630              	.L47:
 631              		.loc 2 195 2 is_stmt 0 view .LVU217
 632              	.LBE17:
 633              	.LBE16:
 243:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 634              		.loc 1 243 3 is_stmt 1 discriminator 1 view .LVU218
 243:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 635              		.loc 1 243 3 discriminator 1 view .LVU219
 243:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 636              		.loc 1 243 3 discriminator 1 view .LVU220
 637 0026 FEE7     		b	.L47
 638              	.L46:
 243:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 639              		.loc 1 243 67 discriminator 2 view .LVU221
 244:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 640              		.loc 1 244 3 discriminator 2 view .LVU222
 641 0028 50F8081C 		ldr	r1, [r0, #-8]
 642 002c 41B1     		cbz	r1, .L48
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 26


 244:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 643              		.loc 1 244 3 view .LVU223
 644              	.LBB18:
 645              	.LBI18:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 646              		.loc 2 191 30 view .LVU224
 647              	.LBB19:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 648              		.loc 2 193 1 view .LVU225
 649              		.loc 2 195 2 view .LVU226
 650              		.syntax unified
 651              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 652 002e 4FF05003 			mov r3, #80												
 653 0032 83F31188 		msr basepri, r3											
 654 0036 BFF36F8F 		isb														
 655 003a BFF34F8F 		dsb														
 656              	
 657              	@ 0 "" 2
 658              	.LVL50:
 659              		.thumb
 660              		.syntax unified
 661              	.L49:
 662              		.loc 2 195 2 is_stmt 0 view .LVU227
 663              	.LBE19:
 664              	.LBE18:
 244:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 665              		.loc 1 244 3 is_stmt 1 discriminator 2 view .LVU228
 244:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 666              		.loc 1 244 3 discriminator 2 view .LVU229
 244:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 667              		.loc 1 244 3 discriminator 2 view .LVU230
 668 003e FEE7     		b	.L49
 669              	.L48:
 244:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 670              		.loc 1 244 50 view .LVU231
 246:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 671              		.loc 1 246 3 view .LVU232
 248:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 672              		.loc 1 248 4 view .LVU233
 252:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 673              		.loc 1 252 5 view .LVU234
 252:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 674              		.loc 1 252 24 is_stmt 0 view .LVU235
 675 0040 23EA0203 		bic	r3, r3, r2
 676 0044 40F8043C 		str	r3, [r0, #-4]
 254:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 677              		.loc 1 254 5 is_stmt 1 view .LVU236
 678 0048 FFF7FEFF 		bl	vTaskSuspendAll
 679              	.LVL51:
 257:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					traceFREE( pv, pxLink->xBlockSize );
 680              		.loc 1 257 6 view .LVU237
 257:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					traceFREE( pv, pxLink->xBlockSize );
 681              		.loc 1 257 35 is_stmt 0 view .LVU238
 682 004c 54F8041C 		ldr	r1, [r4, #-4]
 257:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					traceFREE( pv, pxLink->xBlockSize );
 683              		.loc 1 257 26 view .LVU239
 684 0050 064A     		ldr	r2, .L54+4
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 27


 685 0052 1368     		ldr	r3, [r2]
 686 0054 0B44     		add	r3, r3, r1
 687 0056 1360     		str	r3, [r2]
 258:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 688              		.loc 1 258 41 is_stmt 1 view .LVU240
 259:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 689              		.loc 1 259 6 view .LVU241
 690 0058 2846     		mov	r0, r5
 691 005a FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 692              	.LVL52:
 261:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 693              		.loc 1 261 5 view .LVU242
 261:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 694              		.loc 1 261 14 is_stmt 0 view .LVU243
 695 005e FFF7FEFF 		bl	xTaskResumeAll
 696              	.LVL53:
 270:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 697              		.loc 1 270 28 is_stmt 1 view .LVU244
 273:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 698              		.loc 1 273 1 is_stmt 0 view .LVU245
 699 0062 38BD     		pop	{r3, r4, r5, pc}
 700              	.LVL54:
 701              	.L51:
 702              	.LCFI6:
 703              		.cfi_def_cfa_offset 0
 704              		.cfi_restore 3
 705              		.cfi_restore 4
 706              		.cfi_restore 5
 707              		.cfi_restore 14
 273:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 708              		.loc 1 273 1 view .LVU246
 709 0064 7047     		bx	lr
 710              	.L55:
 711 0066 00BF     		.align	2
 712              	.L54:
 713 0068 00000000 		.word	.LANCHOR5
 714 006c 00000000 		.word	.LANCHOR4
 715              		.cfi_endproc
 716              	.LFE5:
 718              		.section	.text.getBlockSize,"ax",%progbits
 719              		.align	1
 720              		.global	getBlockSize
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 724              		.fpu softvfp
 726              	getBlockSize:
 727              	.LVL55:
 728              	.LFB6:
 278:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 729              		.loc 1 278 1 is_stmt 1 view -0
 730              		.cfi_startproc
 731              		@ args = 0, pretend = 0, frame = 0
 732              		@ frame_needed = 0, uses_anonymous_args = 0
 733              		@ link register save eliminated.
 280:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	BlockLink_t *pxLink;
 734              		.loc 1 280 2 view .LVU248
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 28


 281:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 735              		.loc 1 281 2 view .LVU249
 283:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxLink = ( void * ) puc;
 736              		.loc 1 283 2 view .LVU250
 284:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 737              		.loc 1 284 2 view .LVU251
 286:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 738              		.loc 1 286 2 view .LVU252
 286:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 739              		.loc 1 286 23 is_stmt 0 view .LVU253
 740 0000 50F8043C 		ldr	r3, [r0, #-4]
 286:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 741              		.loc 1 286 38 view .LVU254
 742 0004 024A     		ldr	r2, .L57
 743 0006 1068     		ldr	r0, [r2]
 744              	.LVL56:
 288:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 745              		.loc 1 288 2 is_stmt 1 view .LVU255
 289:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 746              		.loc 1 289 1 is_stmt 0 view .LVU256
 747 0008 23EA0000 		bic	r0, r3, r0
 748              	.LVL57:
 289:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 749              		.loc 1 289 1 view .LVU257
 750 000c 7047     		bx	lr
 751              	.L58:
 752 000e 00BF     		.align	2
 753              	.L57:
 754 0010 00000000 		.word	.LANCHOR5
 755              		.cfi_endproc
 756              	.LFE6:
 758              		.section	.text.pvPortReallocMicroROS,"ax",%progbits
 759              		.align	1
 760              		.global	pvPortReallocMicroROS
 761              		.syntax unified
 762              		.thumb
 763              		.thumb_func
 764              		.fpu softvfp
 766              	pvPortReallocMicroROS:
 767              	.LVL58:
 768              	.LFB7:
 293:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 769              		.loc 1 293 1 is_stmt 1 view -0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 293:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 773              		.loc 1 293 1 is_stmt 0 view .LVU259
 774 0000 70B5     		push	{r4, r5, r6, lr}
 775              	.LCFI7:
 776              		.cfi_def_cfa_offset 16
 777              		.cfi_offset 4, -16
 778              		.cfi_offset 5, -12
 779              		.cfi_offset 6, -8
 780              		.cfi_offset 14, -4
 781 0002 0546     		mov	r5, r0
 782 0004 0C46     		mov	r4, r1
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 29


 294:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 783              		.loc 1 294 2 is_stmt 1 view .LVU260
 784 0006 FFF7FEFF 		bl	vTaskSuspendAll
 785              	.LVL59:
 296:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if (newmem != NULL && pv != NULL)
 786              		.loc 1 296 2 view .LVU261
 296:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if (newmem != NULL && pv != NULL)
 787              		.loc 1 296 18 is_stmt 0 view .LVU262
 788 000a 2046     		mov	r0, r4
 789 000c FFF7FEFF 		bl	pvPortMallocMicroROS
 790              	.LVL60:
 297:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 791              		.loc 1 297 2 is_stmt 1 view .LVU263
 297:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 792              		.loc 1 297 5 is_stmt 0 view .LVU264
 793 0010 0646     		mov	r6, r0
 794 0012 78B1     		cbz	r0, .L60
 297:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 795              		.loc 1 297 21 discriminator 1 view .LVU265
 796 0014 75B1     		cbz	r5, .L60
 797              	.LBB20:
 299:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 798              		.loc 1 299 3 is_stmt 1 view .LVU266
 299:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 799              		.loc 1 299 18 is_stmt 0 view .LVU267
 800 0016 2846     		mov	r0, r5
 801              	.LVL61:
 299:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 802              		.loc 1 299 18 view .LVU268
 803 0018 FFF7FEFF 		bl	getBlockSize
 804              	.LVL62:
 299:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 805              		.loc 1 299 10 view .LVU269
 806 001c 0838     		subs	r0, r0, #8
 807              	.LVL63:
 300:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 808              		.loc 1 300 3 is_stmt 1 view .LVU270
 300:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 809              		.loc 1 300 6 is_stmt 0 view .LVU271
 810 001e 8442     		cmp	r4, r0
 811 0020 00D3     		bcc	.L61
 299:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 812              		.loc 1 299 10 view .LVU272
 813 0022 0446     		mov	r4, r0
 814              	.LVL64:
 815              	.L61:
 304:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 816              		.loc 1 304 3 is_stmt 1 view .LVU273
 817 0024 2246     		mov	r2, r4
 818 0026 2946     		mov	r1, r5
 819 0028 3046     		mov	r0, r6
 820 002a FFF7FEFF 		bl	memcpy
 821              	.LVL65:
 306:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 822              		.loc 1 306 3 view .LVU274
 823 002e 2846     		mov	r0, r5
 824 0030 FFF7FEFF 		bl	vPortFreeMicroROS
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 30


 825              	.LVL66:
 826              	.L60:
 306:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 827              		.loc 1 306 3 is_stmt 0 view .LVU275
 828              	.LBE20:
 309:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 829              		.loc 1 309 2 is_stmt 1 view .LVU276
 309:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 830              		.loc 1 309 11 is_stmt 0 view .LVU277
 831 0034 FFF7FEFF 		bl	xTaskResumeAll
 832              	.LVL67:
 311:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 833              		.loc 1 311 2 is_stmt 1 view .LVU278
 312:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 834              		.loc 1 312 1 is_stmt 0 view .LVU279
 835 0038 3046     		mov	r0, r6
 836 003a 70BD     		pop	{r4, r5, r6, pc}
 312:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 837              		.loc 1 312 1 view .LVU280
 838              		.cfi_endproc
 839              	.LFE7:
 841              		.section	.text.pvPortCallocMicroROS,"ax",%progbits
 842              		.align	1
 843              		.global	pvPortCallocMicroROS
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 847              		.fpu softvfp
 849              	pvPortCallocMicroROS:
 850              	.LVL68:
 851              	.LFB8:
 316:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 852              		.loc 1 316 1 is_stmt 1 view -0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 316:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 856              		.loc 1 316 1 is_stmt 0 view .LVU282
 857 0000 38B5     		push	{r3, r4, r5, lr}
 858              	.LCFI8:
 859              		.cfi_def_cfa_offset 16
 860              		.cfi_offset 3, -16
 861              		.cfi_offset 4, -12
 862              		.cfi_offset 5, -8
 863              		.cfi_offset 14, -4
 864 0002 0546     		mov	r5, r0
 865 0004 0C46     		mov	r4, r1
 317:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	size_t count = xWantedSize*num;
 866              		.loc 1 317 2 is_stmt 1 view .LVU283
 867 0006 FFF7FEFF 		bl	vTaskSuspendAll
 868              	.LVL69:
 318:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 869              		.loc 1 318 2 view .LVU284
 318:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 870              		.loc 1 318 9 is_stmt 0 view .LVU285
 871 000a 05FB04F4 		mul	r4, r5, r4
 872              	.LVL70:
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 31


 320:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	char *in_dest = (char*)mem;
 873              		.loc 1 320 2 is_stmt 1 view .LVU286
 320:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	char *in_dest = (char*)mem;
 874              		.loc 1 320 15 is_stmt 0 view .LVU287
 875 000e 2046     		mov	r0, r4
 876 0010 FFF7FEFF 		bl	pvPortMallocMicroROS
 877              	.LVL71:
 878 0014 0546     		mov	r5, r0
 879              	.LVL72:
 321:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 880              		.loc 1 321 4 is_stmt 1 view .LVU288
 323:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 881              		.loc 1 323 4 view .LVU289
 321:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 882              		.loc 1 321 10 is_stmt 0 view .LVU290
 883 0016 0346     		mov	r3, r0
 323:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 884              		.loc 1 323 9 view .LVU291
 885 0018 03E0     		b	.L64
 886              	.LVL73:
 887              	.L65:
 324:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 888              		.loc 1 324 6 is_stmt 1 view .LVU292
 324:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 889              		.loc 1 324 17 is_stmt 0 view .LVU293
 890 001a 0021     		movs	r1, #0
 891 001c 03F8011B 		strb	r1, [r3], #1
 892              	.LVL74:
 323:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 893              		.loc 1 323 15 view .LVU294
 894 0020 1446     		mov	r4, r2
 895              	.LVL75:
 896              	.L64:
 323:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 897              		.loc 1 323 9 is_stmt 1 view .LVU295
 323:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 898              		.loc 1 323 15 is_stmt 0 view .LVU296
 899 0022 621E     		subs	r2, r4, #1
 900              	.LVL76:
 323:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 901              		.loc 1 323 9 view .LVU297
 902 0024 002C     		cmp	r4, #0
 903 0026 F8D1     		bne	.L65
 326:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	return mem;
 904              		.loc 1 326 2 is_stmt 1 view .LVU298
 326:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	return mem;
 905              		.loc 1 326 11 is_stmt 0 view .LVU299
 906 0028 FFF7FEFF 		bl	xTaskResumeAll
 907              	.LVL77:
 327:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 908              		.loc 1 327 4 is_stmt 1 view .LVU300
 328:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 909              		.loc 1 328 1 is_stmt 0 view .LVU301
 910 002c 2846     		mov	r0, r5
 911 002e 38BD     		pop	{r3, r4, r5, pc}
 328:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 912              		.loc 1 328 1 view .LVU302
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 32


 913              		.cfi_endproc
 914              	.LFE8:
 916              		.section	.text.xPortGetFreeHeapSizeMicroROS,"ax",%progbits
 917              		.align	1
 918              		.global	xPortGetFreeHeapSizeMicroROS
 919              		.syntax unified
 920              		.thumb
 921              		.thumb_func
 922              		.fpu softvfp
 924              	xPortGetFreeHeapSizeMicroROS:
 925              	.LFB9:
 332:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return xFreeBytesRemaining;
 926              		.loc 1 332 1 is_stmt 1 view -0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930              		@ link register save eliminated.
 333:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 931              		.loc 1 333 2 view .LVU304
 334:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 932              		.loc 1 334 1 is_stmt 0 view .LVU305
 933 0000 014B     		ldr	r3, .L68
 934 0002 1868     		ldr	r0, [r3]
 935 0004 7047     		bx	lr
 936              	.L69:
 937 0006 00BF     		.align	2
 938              	.L68:
 939 0008 00000000 		.word	.LANCHOR4
 940              		.cfi_endproc
 941              	.LFE9:
 943              		.section	.text.xPortGetMinimumEverFreeHeapSizeMicroROS,"ax",%progbits
 944              		.align	1
 945              		.global	xPortGetMinimumEverFreeHeapSizeMicroROS
 946              		.syntax unified
 947              		.thumb
 948              		.thumb_func
 949              		.fpu softvfp
 951              	xPortGetMinimumEverFreeHeapSizeMicroROS:
 952              	.LFB10:
 338:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return xMinimumEverFreeBytesRemaining;
 953              		.loc 1 338 1 is_stmt 1 view -0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              		@ link register save eliminated.
 339:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 958              		.loc 1 339 2 view .LVU307
 340:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 959              		.loc 1 340 1 is_stmt 0 view .LVU308
 960 0000 014B     		ldr	r3, .L71
 961 0002 1868     		ldr	r0, [r3]
 962 0004 7047     		bx	lr
 963              	.L72:
 964 0006 00BF     		.align	2
 965              	.L71:
 966 0008 00000000 		.word	.LANCHOR3
 967              		.cfi_endproc
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 33


 968              	.LFE10:
 970              		.section	.text.vPortInitialiseBlocksMicroROS,"ax",%progbits
 971              		.align	1
 972              		.global	vPortInitialiseBlocksMicroROS
 973              		.syntax unified
 974              		.thumb
 975              		.thumb_func
 976              		.fpu softvfp
 978              	vPortInitialiseBlocksMicroROS:
 979              	.LFB11:
 344:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* This just exists to keep the linker quiet. */
 980              		.loc 1 344 1 is_stmt 1 view -0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984              		@ link register save eliminated.
 346:micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 985              		.loc 1 346 1 view .LVU310
 986 0000 7047     		bx	lr
 987              		.cfi_endproc
 988              	.LFE11:
 990              		.section	.bss.pxEnd,"aw",%nobits
 991              		.align	2
 992              		.set	.LANCHOR2,. + 0
 995              	pxEnd:
 996 0000 00000000 		.space	4
 997              		.section	.bss.ucHeap,"aw",%nobits
 998              		.align	2
 999              		.set	.LANCHOR0,. + 0
 1002              	ucHeap:
 1003 0000 00000000 		.space	3072
 1003      00000000 
 1003      00000000 
 1003      00000000 
 1003      00000000 
 1004              		.section	.bss.xBlockAllocatedBit,"aw",%nobits
 1005              		.align	2
 1006              		.set	.LANCHOR5,. + 0
 1009              	xBlockAllocatedBit:
 1010 0000 00000000 		.space	4
 1011              		.section	.bss.xFreeBytesRemaining,"aw",%nobits
 1012              		.align	2
 1013              		.set	.LANCHOR4,. + 0
 1016              	xFreeBytesRemaining:
 1017 0000 00000000 		.space	4
 1018              		.section	.bss.xMinimumEverFreeBytesRemaining,"aw",%nobits
 1019              		.align	2
 1020              		.set	.LANCHOR3,. + 0
 1023              	xMinimumEverFreeBytesRemaining:
 1024 0000 00000000 		.space	4
 1025              		.section	.bss.xStart,"aw",%nobits
 1026              		.align	2
 1027              		.set	.LANCHOR1,. + 0
 1030              	xStart:
 1031 0000 00000000 		.space	8
 1031      00000000 
 1032              		.text
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 34


 1033              	.Letext0:
 1034              		.file 3 "d:\\clion\\gcc-arm-none-eabi-10.3-2021.07-win32\\gcc-arm-none-eabi-10.3-2021.07\\lib\\gcc
 1035              		.file 4 "d:\\clion\\gcc-arm-none-eabi-10.3-2021.07-win32\\gcc-arm-none-eabi-10.3-2021.07\\arm-none
 1036              		.file 5 "d:\\clion\\gcc-arm-none-eabi-10.3-2021.07-win32\\gcc-arm-none-eabi-10.3-2021.07\\arm-none
 1037              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1038              		.file 7 "<built-in>"
ARM GAS  C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s 			page 35


DEFINED SYMBOLS
                            *ABS*:00000000 custom_memory_manager.c
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:16     .text.prvHeapInit:00000000 $t
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:23     .text.prvHeapInit:00000000 prvHeapInit
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:129    .text.prvHeapInit:0000004c $d
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:139    .text.prvInsertBlockIntoFreeList:00000000 $t
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:145    .text.prvInsertBlockIntoFreeList:00000000 prvInsertBlockIntoFreeList
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:276    .text.prvInsertBlockIntoFreeList:00000058 $d
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:282    .text.pvPortMallocMicroROS:00000000 $t
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:289    .text.pvPortMallocMicroROS:00000000 pvPortMallocMicroROS
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:564    .text.pvPortMallocMicroROS:000000dc $d
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:573    .text.vPortFreeMicroROS:00000000 $t
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:580    .text.vPortFreeMicroROS:00000000 vPortFreeMicroROS
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:713    .text.vPortFreeMicroROS:00000068 $d
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:719    .text.getBlockSize:00000000 $t
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:726    .text.getBlockSize:00000000 getBlockSize
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:754    .text.getBlockSize:00000010 $d
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:759    .text.pvPortReallocMicroROS:00000000 $t
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:766    .text.pvPortReallocMicroROS:00000000 pvPortReallocMicroROS
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:842    .text.pvPortCallocMicroROS:00000000 $t
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:849    .text.pvPortCallocMicroROS:00000000 pvPortCallocMicroROS
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:917    .text.xPortGetFreeHeapSizeMicroROS:00000000 $t
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:924    .text.xPortGetFreeHeapSizeMicroROS:00000000 xPortGetFreeHeapSizeMicroROS
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:939    .text.xPortGetFreeHeapSizeMicroROS:00000008 $d
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:944    .text.xPortGetMinimumEverFreeHeapSizeMicroROS:00000000 $t
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:951    .text.xPortGetMinimumEverFreeHeapSizeMicroROS:00000000 xPortGetMinimumEverFreeHeapSizeMicroROS
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:966    .text.xPortGetMinimumEverFreeHeapSizeMicroROS:00000008 $d
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:971    .text.vPortInitialiseBlocksMicroROS:00000000 $t
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:978    .text.vPortInitialiseBlocksMicroROS:00000000 vPortInitialiseBlocksMicroROS
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:991    .bss.pxEnd:00000000 $d
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:995    .bss.pxEnd:00000000 pxEnd
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:998    .bss.ucHeap:00000000 $d
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:1002   .bss.ucHeap:00000000 ucHeap
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:1005   .bss.xBlockAllocatedBit:00000000 $d
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:1009   .bss.xBlockAllocatedBit:00000000 xBlockAllocatedBit
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:1012   .bss.xFreeBytesRemaining:00000000 $d
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:1016   .bss.xFreeBytesRemaining:00000000 xFreeBytesRemaining
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:1019   .bss.xMinimumEverFreeBytesRemaining:00000000 $d
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:1023   .bss.xMinimumEverFreeBytesRemaining:00000000 xMinimumEverFreeBytesRemaining
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:1026   .bss.xStart:00000000 $d
C:\Users\weiyi\AppData\Local\Temp\ccRo9Avb.s:1030   .bss.xStart:00000000 xStart

UNDEFINED SYMBOLS
vTaskSuspendAll
xTaskResumeAll
memcpy
